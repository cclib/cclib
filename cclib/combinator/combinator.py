# Copyright (c) 2024, the cclib development team
#
# This file is part of cclib (http://cclib.github.io) and is distributed under
# the terms of the BSD 3-Clause License.
from dataclasses import dataclass
from typing import TYPE_CHECKING

import cclib.attribute_parsers as cprops

if TYPE_CHECKING:
    from cclib.tree import Tree


@dataclass
class Combinator:
    name: str
    job_list: list


DEFAULT_PARSERS = [
    cprops.scfenergies,
    cprops.atomcoords,
    cprops.atomcharges,
    cprops.atomnos,
    cprops.charge,
    cprops.ccenergies,
    cprops.dispersionenergies,
    cprops.mult,
    cprops.moenergies,
    cprops.natom,
    cprops.coreelectrons,  # dependncy on natom
    cprops.nbasis,
    cprops.gbasis,
    cprops.aooverlaps,
    cprops.atommasses,
    cprops.mosyms,
    cprops.nmo,
    cprops.atombasis,
    cprops.scftargets,
    cprops.scfvalues,
]


class AutoCombinator(Combinator):
    def __init__(self, tree: "Tree") -> None:
        self.name = f"Autogenerated combinator for {len(tree)} jobs"
        self.job_list = [DEFAULT_PARSERS for _ in range(len(tree))]
