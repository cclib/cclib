---
# yamllint disable rule:line-length
name: run tests and coverage

# yamllint disable-line rule:truthy
on: [push, pull_request]

jobs:
  run-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        container:
          - 'shivupa/cclib-ci:py38-edge'
          - 'shivupa/cclib-ci:py39-edge'
          - 'shivupa/cclib-ci:py310-edge'
          - 'shivupa/cclib-ci:py311-edge'
    container:
      image: ${{ matrix.container }}
    defaults:
      run:
        shell: bash -eo pipefail -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Allow repo access (see https://github.com/actions/checkout/issues/760)
        run: |
          git config --global --add safe.directory /__w/cclib/cclib
      - name: Prepare conda environment
        run: |
          echo "/opt/conda/envs/cclib/bin" >> $GITHUB_PATH
      - name: Install cclib
        run: |
          python -m pip install .
      - name: Filter code
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            methods:
              - 'cclib/cclib/method/**'
              - 'test/method/**'
      - name: Test core code with pytest
        run: |
          env | sort
          bash .github/scripts/run_pytest.bash 2
      - name: Test methods with pytest
        if: steps.filter.outputs.methods == 'true'
        run: |
          bash .github/scripts/run_pytest_methods.bash 2
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage-unit.xml,./coverage-regression.xml,./coverage-method.xml
          name: codecov-cclib
          fail_ci_if_error: true
          verbose: false
        if: matrix.container == 'shivupa/cclib-ci:py311-edge'
      - name: Install pypa/build
        run: |
          python -m pip install build
      - name: Build distribution packages (binary wheel and source tarball)
        run: |
          python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
        if: matrix.container == 'shivupa/cclib-ci:py311-edge'
  check-installation:
    needs:
      - run-tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        install-method: [wheel, source]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Download the distribution packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Update environment
        run: |
          python -m pip install -U setuptools pip
      - name: Install cclib (wheel)
        run: |
          python -m pip install dist/*.whl
        if: matrix.install-method == 'wheel'
      - name: Install cclib (source)
        run: |
          python -m pip install dist/*.tar.gz
        if: matrix.install-method == 'source'
      - name: Check cclib install
        run: |
          cd ~
          python -c 'from cclib.io import ccread; data = ccread("https://raw.githubusercontent.com/cclib/cclib-data/master/Gaussian/Gaussian16/water.log"); print(data.zpve)'
