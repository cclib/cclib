---
# yamllint disable rule:line-length
name: publish packages to package indices

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: publish-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

env:
  # For now always take the "reduced" form of the version, even for those
  # actions runs that do not push to a package index.
  VERSIONINGIT_FOR_PACKAGE_INDEX: true

jobs:

  # Taken from
  # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/,
  # where building the distribution happens every commit after running the
  # tests

  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    runs-on: ubuntu-24.04

    # publish on merge to default branch or any tag
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')

    environment:
      name: testpypi
      url: https://test.pypi.org/p/cclib

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          repository-url: https://test.pypi.org/legacy/
          # Temporary workaround for
          # https://github.com/pypa/gh-action-pypi-publish/issues/283
          attestations: false

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    runs-on: ubuntu-24.04

    # only publish on release/versioned tag pushes
    if: startsWith(github.ref, 'refs/tags/v')

    environment:
      name: pypi
      url: https://pypi.org/p/cclib

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          # Temporary workaround for
          # https://github.com/pypa/gh-action-pypi-publish/issues/283
          attestations: false

  github-release:
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    runs-on: ubuntu-24.04

    # make (draft) release on any tag
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@f7ad0af51a5648d09a20d00370f0a91c3bdf8f84 # v3.0.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release (draft)
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --draft
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
